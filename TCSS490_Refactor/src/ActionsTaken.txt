Steps taken. 
1. JUnit Testing Complete  

2.Refactored customer information from the following classes: 
CheckingAccount
SavingsAccount
DebitCard
CreditCard
Bad smell(s): Duplicate code in classes and across classes. Too long of parameters due to passing in all the customer information. Data clumps with the same code in multiple classes. Refactoring the customer information to its own class and passing a customer object with any other information as a parameter will solve both these issues. 

3.Created a customer object in Bank for Bob Smith and passed that into the account objects. This resolved the duplicate code and too long of parameters.

4. In CheckingAccount, CreditCard, DebitCard, and SavingsAccount; I fixed the parameters to fix the bad smell regarding to the too long of parameters and the duplicate code bad smell.

5. In CheckingAccount, in applyForCreditCard, there was an unused parameter relating to the Speculative Generality bad smell. There were also fields in this class named fSavingsAccount and fDebitCard.

6. In CheckingAccount and in Bank, there was a method named applyForCreditCard that referred to the feature envy bad smell. I moved applyForCreditCard to the Bank class, since it seemed to belong there.

7. In Bank, there was Speculative Generality for the constructor (the parameter fName is never used anywhere in the code, other than setting it to name, which is also not used) and we removed the costs field from SavingsAccount for the same reason. In CreditCard, the fields: fLastCreditCardNumber, fAccountConnectedTo, fCreditCardNumber are not being used and have also been removed due to speculative generality. Any information relating to customer was removed from CreditCard due to speculative generality. Account numbers associated with credit card and debit card were removed due to  speculative generality and the default constructor for debit card was removed because of speculative generality. The account number associated with savings account was also removed due to speculative generality.

8. In both of the accounts classes, verseMoney was taken out since it has the same exact function as increaseBalance. We changed verseBalance in SavingsAccount to increaseBalance. This was a duplicate code bad smell.

9.

10.